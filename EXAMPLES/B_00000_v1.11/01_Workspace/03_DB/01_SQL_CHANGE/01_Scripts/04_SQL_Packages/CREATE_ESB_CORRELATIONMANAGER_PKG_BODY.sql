--------------------------------------------------------
--  DDL for Package Body ESB_CORRELATIONMANAGER_PKG
--------------------------------------------------------
create or replace 

 

PACKAGE BODY ESB_CORRELATIONMANAGER_PKG AS
  
   PROCEDURE REGISTER (GROUP_NAME IN VARCHAR2, GROUP_DESC IN VARCHAR2, GROUP_HEADER IN CLOB, MEMBER_TYPES IN MEMBER_T_CUR, ID_GROUP OUT NUMBER, p_SOURCE_ERROR_DESC OUT VARCHAR2, p_SOURCE_ERROR_CODE OUT VARCHAR2) IS
  v_member_instance_id NUMBER;
  
  
   id_type NUMBER;
  BEGIN
       
      p_SOURCE_ERROR_DESC := ' ';
      p_SOURCE_ERROR_CODE := '0';
  

	  
	  ID_GROUP:= ESB_CORRELATION_GROUP_SEQ.NEXTVAL;
	  INSERT INTO ESB_CORRELATION_GROUP (ID, NAME,REQUESTHEADER,DESCRIPTION) 
	  VALUES (ID_GROUP, GROUP_NAME, GROUP_HEADER, GROUP_DESC);
	  FOR I IN MEMBER_TYPES.FIRST .. MEMBER_TYPES.LAST LOOP
		v_member_instance_id  := ESB_CORRELATION_INSTANCE_SEQ.NEXTVAL;
		
		INSERT INTO ESB_CORRELATION_INSTANCE (ID, CORRELATION_ID, MEMBER_NAME,MEMBER_ADDRESS)
		VALUES (v_member_instance_id,  MEMBER_TYPES(I).CORRELATION_ID_,  MEMBER_TYPES(I).MEMBER_NAME_,MEMBER_TYPES(I).MEMBER_ADDRESS_);
	
		
		Select ct.id into  id_type   from ESB_CORRELATION_MEMBER_TYPE ct where ct.name= MEMBER_TYPES(I).TYPE_MEMBER_;
		
		INSERT INTO ESB_CORRELATION (ID, GROUP_INSTANCE, MEMBER_INSTANCE, TYPE_MEMBER)
		VALUES (ESB_CORRELATION_SEQ.NEXTVAL, ID_GROUP, v_member_instance_id, id_type );
	  END LOOP;

	EXCEPTION
	   WHEN NO_DATA_FOUND 
	   THEN
		  p_SOURCE_ERROR_DESC := 'UNKNOWN TYPE MEMBER';
		  p_SOURCE_ERROR_CODE := '2';
		WHEN OTHERS 
			   THEN
				   p_SOURCE_ERROR_DESC := 'UNKNOWN_ERROR';
		  p_SOURCE_ERROR_CODE := '99';
		  ID_GROUP :=-1;
                
 	  
	END REGISTER;
  
   PROCEDURE GET (GROUP_NAME IN VARCHAR2, MEMBER_TYPES IN MEMBER_T , CORRELATION_MESSAGE OUT SYS_REFCURSOR,p_SOURCE_ERROR_DESC OUT VARCHAR2, p_SOURCE_ERROR_CODE OUT VARCHAR2) IS
		  aux_group_name ESB_CORRELATION_GROUP.NAME %TYPE;
		  aux_group_header ESB_CORRELATION_GROUP.REQUESTHEADER%TYPE;
		  aux_description ESB_CORRELATION_GROUP.DESCRIPTION%TYPE;
		  aux_group_id ESB_CORRELATION_GROUP.ID%TYPE;
		  aux_member_name ESB_CORRELATION_INSTANCE.MEMBER_NAME%TYPE;
		  aux_member_correlation_id ESB_CORRELATION_INSTANCE.CORRELATION_ID%TYPE;
		  aux_member_type ESB_CORRELATION_MEMBER_TYPE.NAME%TYPE;
		  aux_member_address ESB_CORRELATION_INSTANCE.MEMBER_ADDRESS%TYPE;
		  BEGIN
		   p_SOURCE_ERROR_DESC := ' ';
		   p_SOURCE_ERROR_CODE := '0';
		   
		   SELECT CG.name AS "GROUP_NAME", CG.REQUESTHEADER AS "GROUP_HEADER", CG.description AS "GROUP_DESC", CG.id AS "GROUP_ID" ,CI.member_name  AS "MEMBER_NAME",CI.correlation_id AS "MEMBER_CORRELATION_ID"  ,MT.name AS "MEMBER_TYPE" ,CI.member_address  AS "MEMBER_ADDRESS"  
		   INTO aux_group_name, aux_group_header, aux_description, aux_group_id, aux_member_name, aux_member_correlation_id, aux_member_type, aux_member_address
		   FROM ESB_CORRELATION C 
				  INNER JOIN ESB_CORRELATION_MEMBER_TYPE MT ON C.type_member = MT.id 
				  INNER JOIN ESB_CORRELATION_GROUP CG ON C.group_instance = CG.id 
				  INNER JOIN ESB_CORRELATION_INSTANCE CI ON CI.id =  C.member_instance 
				  WHERE CG.id  IN (
								  SELECT CG.id  FROM ESB_CORRELATION C 
								  INNER JOIN ESB_CORRELATION_MEMBER_TYPE MT ON C.type_member = MT.id 
								  INNER JOIN ESB_CORRELATION_GROUP CG ON C.group_instance = CG.id 
								  INNER JOIN ESB_CORRELATION_INSTANCE CI ON CI.id =  C.member_instance 
								  WHERE CI.correlation_id =MEMBER_TYPES.CORRELATION_ID_  and CI.member_name =MEMBER_TYPES.MEMBER_NAME_   and CG.name = GROUP_NAME and  mt.name=MEMBER_TYPES.TYPE_MEMBER_
								  );
								  
			   OPEN CORRELATION_MESSAGE FOR
			  SELECT CG.name AS "GROUP_NAME", CG.REQUESTHEADER AS "GROUP_HEADER", CG.description AS "GROUP_DESC", CG.id AS "GROUP_ID" ,CI.member_name  AS "MEMBER_NAME",CI.correlation_id AS "MEMBER_CORRELATION_ID"  ,MT.name AS "MEMBER_TYPE" ,CI.member_address  AS "MEMBER_ADDRESS"  FROM ESB_CORRELATION C 
				  INNER JOIN ESB_CORRELATION_MEMBER_TYPE MT ON C.type_member = MT.id 
				  INNER JOIN ESB_CORRELATION_GROUP CG ON C.group_instance = CG.id 
				  INNER JOIN ESB_CORRELATION_INSTANCE CI ON CI.id =  C.member_instance 
				  WHERE CG.id  IN (
								  SELECT CG.id  FROM ESB_CORRELATION C 
								  INNER JOIN ESB_CORRELATION_MEMBER_TYPE MT ON C.type_member = MT.id 
								  INNER JOIN ESB_CORRELATION_GROUP CG ON C.group_instance = CG.id 
								  INNER JOIN ESB_CORRELATION_INSTANCE CI ON CI.id =  C.member_instance 
								  WHERE CI.correlation_id =MEMBER_TYPES.CORRELATION_ID_  and CI.member_name =MEMBER_TYPES.MEMBER_NAME_   and CG.name = GROUP_NAME and  mt.name=MEMBER_TYPES.TYPE_MEMBER_
								  );
				  
		 EXCEPTION
		  WHEN TOO_MANY_ROWS THEN 
			
				  OPEN CORRELATION_MESSAGE FOR
				  SELECT CG.name AS "GROUP_NAME", CG.REQUESTHEADER AS "GROUP_HEADER", CG.description AS "GROUP_DESC", CG.id AS "GROUP_ID" ,CI.member_name  AS "MEMBER_NAME",CI.correlation_id AS "MEMBER_CORRELATION_ID"  ,MT.name AS "MEMBER_TYPE" ,CI.member_address  AS "MEMBER_ADDRESS"  FROM ESB_CORRELATION C 
				  INNER JOIN ESB_CORRELATION_MEMBER_TYPE MT ON C.type_member = MT.id 
				  INNER JOIN ESB_CORRELATION_GROUP CG ON C.group_instance = CG.id 
				  INNER JOIN ESB_CORRELATION_INSTANCE CI ON CI.id =  C.member_instance 
				  WHERE CG.id  IN (
								  SELECT CG.id  FROM ESB_CORRELATION C 
								  INNER JOIN ESB_CORRELATION_MEMBER_TYPE MT ON C.type_member = MT.id 
								  INNER JOIN ESB_CORRELATION_GROUP CG ON C.group_instance = CG.id 
								  INNER JOIN ESB_CORRELATION_INSTANCE CI ON CI.id =  C.member_instance 
								  WHERE CI.correlation_id =MEMBER_TYPES.CORRELATION_ID_  and CI.member_name =MEMBER_TYPES.MEMBER_NAME_   and CG.name = GROUP_NAME and  mt.name=MEMBER_TYPES.TYPE_MEMBER_
								  );
				p_SOURCE_ERROR_DESC := ' ';
				p_SOURCE_ERROR_CODE := '0';
                
  END GET;
	


 
END ESB_CORRELATIONMANAGER_PKG;
/
