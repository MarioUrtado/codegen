create or replace 
PACKAGE "ESB_CONVERSATION_MANAGER_PKG"
AS

PROCEDURE getConversationStatus(
		p_CONVERSATION_ID 		IN VARCHAR2, 
		p_STATUS 				OUT VARCHAR2,
		p_RSP_MSG 				OUT CLOB,
		p_CAN_ERROR_ID 			OUT NUMBER
		);
    
PROCEDURE updateConversationStatus(
      p_CONVERSATION_ID  IN VARCHAR2,
      p_STATUS           IN VARCHAR2,
      p_RSP_MSG          IN CLOB,
      p_CAN_ERROR_CODE   IN NUMBER,
      p_CAN_ERROR_TYPE   IN VARCHAR2,
      p_UPDATE_COMPONENT IN VARCHAR2,
      p_UPDATE_OPERATION IN VARCHAR2,
      p_RESULT_CODE OUT VARCHAR2,
      p_RESULT_DESCRIPTION OUT VARCHAR2 );
    
PROCEDURE putConversationStatus(
		P_CONVERSATION_ID 		IN VARCHAR2, 
		p_RESULT_CODE 			OUT VARCHAR2,
		p_RESULT_DESCRIPTION 	OUT VARCHAR2
		);
    
    
PROCEDURE getConsumerCallbackURL(
    p_SYSTEM_CODE 		    IN VARCHAR2, 
    p_COUNTRY_CODE        IN VARCHAR2,
    p_ENTERPRISE_CODE     IN VARCHAR2,
    p_SERVICE_CODE     IN VARCHAR2,
	p_CAPABILITY_NAME     IN VARCHAR2,
    p_TRANSPORT           OUT VARCHAR2,
    p_CALLBACK_URL        OUT VARCHAR2,
    p_SOAP_ACTION         OUT VARCHAR2,
		p_RESULT_CODE 			  OUT VARCHAR2,
		p_RESULT_DESCRIPTION 	OUT VARCHAR2);
		
PROCEDURE getCapabilityCode(
	p_SERVICE_CODE		IN VARCHAR2, 
	p_CAPABILITY_NAME	IN VARCHAR2, 
	p_CAPABILITY_CODE	OUT VARCHAR2);
    
PROCEDURE getConsumerCallbackURLWithCap(
    p_CONSUMER_ID         IN NUMBER,
    p_CAPABILITY_CODE     IN VARCHAR2,
    p_TRANSPORT           OUT VARCHAR2,
    p_CALLBACK_URL        OUT VARCHAR2,
    p_SOAP_ACTION         OUT VARCHAR2,
		p_RESULT_CODE 			  OUT VARCHAR2,
		p_RESULT_DESCRIPTION 	OUT VARCHAR2);
    
PROCEDURE getSOAPAction(
    p_CAPABILITY_CODE     IN VARCHAR2,
    p_SOAP_ACTION         OUT VARCHAR2);
    
PROCEDURE getConsumerCallbackURLLessCap(
    p_CONSUMER_ID         IN NUMBER,
    p_TRANSPORT           OUT VARCHAR2,
    p_CALLBACK_URL        OUT VARCHAR2,
		p_RESULT_CODE 			  OUT VARCHAR2,
		p_RESULT_DESCRIPTION 	OUT VARCHAR2);
    
  PROCEDURE existsConsumer(
    p_SYSTEM_CODE 		    IN VARCHAR2, 
    p_COUNTRY_CODE        IN VARCHAR2,
    p_ENTERPRISE_CODE     IN VARCHAR2,
    p_CONSUMER_ID OUT NUMBER
  );
        
PROCEDURE getSequenceStatusConversation(
    p_CONVERSATION_ID 		IN VARCHAR2, 
    p_CONVERSATION_STATUS	 OUT VARCHAR2,
		p_SEQ_STATUS 				   OUT NUMBER);
    
PROCEDURE getSequenceStatus(
    p_CONVERSATION_ID 		 IN VARCHAR2,
    p_SEQ_STATUS	 OUT NUMBER);
	
PROCEDURE getInfo(
    p_CONVERSATION_ID IN VARCHAR2,
    p_CONV_TYPE 	  OUT VARCHAR2,
    p_CONV_SEQUENCE 	  OUT VARCHAR2,
    p_CONV_SERVICE	  OUT VARCHAR2,
    p_CONV_CAPABILITY 	  OUT VARCHAR2,
    p_CONV_STATUS 	  OUT VARCHAR2,
    p_CONV_TX_TYPE 	  OUT VARCHAR2,
    p_CONV_TX_SEQUENCE 	  OUT VARCHAR2,
    p_CONV_TX_EVENT_ID 	  OUT VARCHAR2,
    p_CONV_TX_PROCESS_ID 	  OUT VARCHAR2,
    p_CONV_TX_CORR_ID 	  OUT VARCHAR2,
    p_CONV_TX_STATUS 	  OUT VARCHAR2,
    p_RESULT_CODE OUT VARCHAR2,
    p_RESULT_DESC OUT VARCHAR2
    );
		
END ESB_CONVERSATION_MANAGER_PKG;